#include <iostream>
#include <vector>

using namespace std;

class TicTacToe {
public:
    TicTacToe() {
        board = vector<vector<char>>(3, vector<char>(3, ' '));
        currentPlayer = 'X';
        gameOver = false;
    }

    void playGame() {
        while (!gameOver) {
            displayBoard();
            playerMove();
            updateBoard();
            checkWin();
            checkDraw();
            switchPlayer();
        }
        displayBoard();
        displayResult();
    }

private:
    vector<vector<char>> board;
    char currentPlayer;
    bool gameOver;
    char winner;

    void displayBoard() {
        system("clear"); // Use "cls" for Windows systems
        cout << "Current Board:" << endl;
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                cout << board[i][j];
                if (j < 2) cout << " | ";
            }
            cout << endl;
            if (i < 2) cout << "--|---|--" << endl;
        }
        cout << endl;
    }

    void playerMove() {
        int row, col;
        cout << "Player " << currentPlayer << ", enter your move (row and column): ";
        cin >> row >> col;
        while (row < 1 || row > 3 || col < 1 || col > 3 || board[row-1][col-1] != ' ') {
            cout << "Invalid move. Try again: ";
            cin >> row >> col;
        }
        board[row-1][col-1] = currentPlayer;
    }

    void updateBoard() {
        // Board is updated directly in playerMove method
    }

    void checkWin() {
        // Check rows, columns, and diagonals
        for (int i = 0; i < 3; ++i) {
            if (board[i][0] == currentPlayer && board[i][1] == currentPlayer && board[i][2] == currentPlayer) {
                winner = currentPlayer;
                gameOver = true;
                return;
            }
            if (board[0][i] == currentPlayer && board[1][i] == currentPlayer && board[2][i] == currentPlayer) {
                winner = currentPlayer;
                gameOver = true;
                return;
            }
        }
        if (board[0][0] == currentPlayer && board[1][1] == currentPlayer && board[2][2] == currentPlayer) {
            winner = currentPlayer;
            gameOver = true;
            return;
        }
        if (board[0][2] == currentPlayer && board[1][1] == currentPlayer && board[2][0] == currentPlayer) {
            winner = currentPlayer;
            gameOver = true;
            return;
        }
    }

    void checkDraw() {
        bool draw = true;
        for (const auto& row : board) {
            for (char cell : row) {
                if (cell == ' ') {
                    draw = false;
                    break;
                }
            }
            if (!draw) break;
        }
        if (draw) {
            winner = ' ';
            gameOver = true;
        }
    }

    void switchPlayer() {
        if (!gameOver) {
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        }
    }

    void displayResult() {
        if (winner == 'X' || winner == 'O') {
            cout << "Player " << winner << " wins!" << endl;
        } else {
            cout << "The game is a draw!" << endl;
        }
        playAgain();
    }

    void playAgain() {
        char choice;
        cout << "Do you want to play again? (y/n): ";
        cin >> choice;
        if (choice == 'y' || choice == 'Y') {
            board = vector<vector<char>>(3, vector<char>(3, ' '));
            currentPlayer = 'X';
            gameOver = false;
            playGame();
        } else {
            cout << "Thanks for playing!" << endl;
        }
    }
};

int main() {
    TicTacToe game;
    game.playGame();
    return 0;
}
